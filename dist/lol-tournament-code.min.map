{"version":3,"sources":["..\\..\\..\\..\\AppData\\Roaming\\npm\\node_modules\\browserify\\node_modules\\browser-pack\\_prelude.js","index","lib\\index.js","..\\..\\..\\..\\AppData\\Roaming\\npm\\node_modules\\browserify\\node_modules\\buffer\\index.js","..\\xp-load\\lib\\index.js","..\\..\\..\\..\\AppData\\Roaming\\npm\\node_modules\\browserify\\node_modules\\buffer\\node_modules\\is-array\\index.js","..\\..\\..\\..\\AppData\\Roaming\\npm\\node_modules\\browserify\\node_modules\\buffer\\node_modules\\ieee754\\index.js","..\\..\\..\\..\\AppData\\Roaming\\npm\\node_modules\\browserify\\node_modules\\buffer\\node_modules\\base64-js\\lib\\b64.js"],"names":["generate","opt","code","encoded","XP","assertArgument","isObject","assert","name","RequiredError","map","includes","maps","toNumber","type","types","size","sizes","spectators","extra","JSON","stringify","password","report","Buffer","toString","load","require","isBrowser","global","LoL","tournamentCode","module","exports","subject","encoding","noZero","this","length","byteLength","TypeError","isArray","data","Math","floor","kMaxLength","RangeError","buf","TYPED_ARRAY_SUPPORT","_augment","Uint8Array","_isBuffer","i","_set","isArrayish","isBuffer","readUInt8","write","poolSize","parent","rootParent","SlowBuffer","hexWrite","string","offset","Number","remaining","strLen","Error","byte","parseInt","substr","isNaN","utf8Write","charsWritten","blitBuffer","utf8ToBytes","asciiWrite","asciiToBytes","binaryWrite","base64Write","base64ToBytes","utf16leWrite","utf16leToBytes","base64Slice","start","end","base64","fromByteArray","slice","utf8Slice","res","tmp","min","decodeUtf8Char","String","fromCharCode","asciiSlice","ret","binarySlice","hexSlice","len","out","toHex","utf16leSlice","bytes","checkOffset","ext","checkInt","value","max","objectWriteUInt16","littleEndian","j","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","str","stringtrim","replace","INVALID_BASE64_RE","trim","n","units","codePoint","leadSurrogate","charCodeAt","push","byteArray","c","hi","lo","toByteArray","src","dst","unitSize","decodeURIComponent","err","INSPECT_MAX_BYTES","ArrayBuffer","arr","foo","subarray","e","b","compare","a","x","y","isEncoding","toLowerCase","concat","list","totalLength","undefined","pos","item","copy","prototype","loweredCase","equals","inspect","match","join","get","console","log","set","v","writeUInt8","isFinite","swap","toJSON","Array","call","_arr","newBuf","sliceLen","readUIntLE","val","mul","readUIntBE","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","read","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","target","target_start","source","fill","toArrayBuffer","buffer","BP","constructor","_get","toLocaleString","window","required","browserName","Object","keys","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","d","s","rt","abs","LN2","lookup","decode","elt","PLUS","PLUS_URL_SAFE","SLASH","SLASH_URL_SAFE","NUMBER","UPPER","LOWER","b64ToByteArray","b64","L","l","placeHolders","charAt","Arr","uint8ToBase64","uint8","encode","num","tripletToBase64","temp","extraBytes","output","base64js"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports=require(\"./lib\");","/*jslint browser: true, devel: true, node: true, ass: true, nomen: true, unparam: true, indent: 4 */\r\n\r\n(function () {\r\n    \"use strict\";\r\n\r\n    var load = require('xp-load'),\r\n        XP = load(require('expandjs'), 'XP'),\r\n\r\n        /**\r\n         * The list of available map IDs\r\n         *\r\n         * 1: Summoner's Rift (Summer)\r\n         * 2: Summoner's Rift (Autumn)\r\n         * 3: Proving Grounds\r\n         * 4: Twisted Treeline\r\n         * 8: Crystal Scar\r\n         * 10: Twisted Treeline (New)\r\n         * 11: Summoner's Rift(New)\r\n         * 12: Howling Abyss\r\n         *\r\n         * @type {number[]}\r\n         * @private\r\n         */\r\n        maps = [1, 2, 3, 4, 8, 10, 11, 12],\r\n\r\n        /**\r\n         * The list of available game types\r\n         *\r\n         * 1: Blind Pick\r\n         * 2: Draft Mode\r\n         * 4: All Random\r\n         * 6: Tournament Draft\r\n         *\r\n         * @type {number[]}\r\n         * @private\r\n         */\r\n        types = [1, 2, 4, 6],\r\n\r\n        /**\r\n         * Number of possible players in each team\r\n         *\r\n         * @type {number[]}\r\n         * @private\r\n         */\r\n        sizes = [1, 2, 3, 4, 5],\r\n\r\n        /**\r\n         * List of possible spectator restriction\r\n         *\r\n         * ALL: Everybody can spectate the game\r\n         * NONE: Nobody can spectate the game\r\n         * FRIENDS: Only friends of the players can spectate the game\r\n         * DROPINONLY: Only people present in the lobby can spectate the game\r\n         *\r\n         * @type {string[]}\r\n         * @private\r\n         */\r\n        spectators = ['ALL', 'NONE', 'NONE', 'FRIENDS', 'DROPINONLY'];\r\n\r\n    /**\r\n     * Creates a tournament code\r\n     *\r\n     * @method generate\r\n     * @param {Object} opt\r\n     *  @param {String} opt.name - The name of the lobby\r\n     *  @param {String} [opt.password = ''] - The password of the lobby\r\n     *  @param {Number} [opt.map = 11] - The ID of the map to be played\r\n     *  @param {Number} [opt.type = 6] - The game type of the game to be played\r\n     *  @param {Number} [opt.size = 5] - The size of the teams\r\n     *  @param {String} [opt.spectators = 'DROPINONLY] - Which persons can spectate the game\r\n     *  @param {String} [opt.report] - URL where to receive a report info after the game is over\r\n     *  @param {String} [opt.extra = ''] - Any extra details to be sent to the reportURL\r\n     * @returns string\r\n     * @throws\r\n     */\r\n\r\n    function generate(opt) {\r\n        var code,\r\n            encoded;\r\n\r\n        //Checking\r\n        XP.assertArgument(XP.isObject(opt), 1, 'Object');\r\n        XP.assert(opt.name, function () { throw new XP.RequiredError('name'); });\r\n\r\n        //Assigning\r\n        opt.map      = XP.includes(maps, XP.toNumber(opt.map)) ? opt.map : 11;\r\n        opt.type     = XP.includes(types, XP.toNumber(opt.type)) ? opt.type : 6;\r\n        opt.size   = XP.includes(sizes, XP.toNumber(opt.size)) ? opt.size : 5;\r\n        opt.spectators = XP.includes(spectators, opt.spectators) ? opt.spectators : 'DROPINONLY';\r\n        opt.extra      = opt.extra || '';\r\n\r\n        //Encoding\r\n        encoded =  JSON.stringify({\r\n            name: opt.name,\r\n            extra: opt.extra,\r\n            password: opt.password,\r\n            report: opt.report\r\n        });\r\n        encoded = new Buffer(encoded).toString('base64');\r\n\r\n        //Creating\r\n        code = 'pvpnet://lol/customgame/joinorcreate/map' + opt.map +\r\n                '/pick' + opt.type +\r\n                '/team' + opt.size +\r\n                '/spec' + opt.spectators +\r\n                '/' + encoded;\r\n\r\n        return code;\r\n    }\r\n\r\n    if (XP.isBrowser()) {\r\n        global.LoL = global.LoL || {};\r\n        global.LoL.tournamentCode = generate;\r\n    } else {\r\n        module.exports = generate;\r\n    }\r\n\r\n}());","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('is-array')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\nBuffer.poolSize = 8192 // not used by this implementation\n\nvar kMaxLength = 0x3fffffff\nvar rootParent = {}\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Note:\n *\n * - Implementation must support adding new properties to `Uint8Array` instances.\n *   Firefox 4-29 lacked support, fixed in Firefox 30+.\n *   See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *  - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *  - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *    incorrect length in some situations.\n *\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they will\n * get the Object implementation, which is slower but will work correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = (function () {\n  try {\n    var buf = new ArrayBuffer(0)\n    var arr = new Uint8Array(buf)\n    arr.foo = function () { return 42 }\n    return 42 === arr.foo() && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        new Uint8Array(1).subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n})()\n\n/**\n * Class: Buffer\n * =============\n *\n * The Buffer constructor returns instances of `Uint8Array` that are augmented\n * with function properties for all the node `Buffer` API functions. We use\n * `Uint8Array` so that square bracket notation works as expected -- it returns\n * a single octet.\n *\n * By augmenting the instances, we can avoid modifying the `Uint8Array`\n * prototype.\n */\nfunction Buffer (subject, encoding, noZero) {\n  if (!(this instanceof Buffer))\n    return new Buffer(subject, encoding, noZero)\n\n  var type = typeof subject\n\n  // Find the length\n  var length\n  if (type === 'number')\n    length = subject > 0 ? subject >>> 0 : 0\n  else if (type === 'string') {\n    length = Buffer.byteLength(subject, encoding)\n  } else if (type === 'object' && subject !== null) { // assume object is array-like\n    if (subject.type === 'Buffer' && isArray(subject.data))\n      subject = subject.data\n    length = +subject.length > 0 ? Math.floor(+subject.length) : 0\n  } else\n    throw new TypeError('must start with number, buffer, array or string')\n\n  if (length > kMaxLength)\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n      'size: 0x' + kMaxLength.toString(16) + ' bytes')\n\n  var buf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Preferred: Return an augmented `Uint8Array` instance for best performance\n    buf = Buffer._augment(new Uint8Array(length))\n  } else {\n    // Fallback: Return THIS instance of Buffer (created by `new`)\n    buf = this\n    buf.length = length\n    buf._isBuffer = true\n  }\n\n  var i\n  if (Buffer.TYPED_ARRAY_SUPPORT && typeof subject.byteLength === 'number') {\n    // Speed optimization -- use set if we're copying from a typed array\n    buf._set(subject)\n  } else if (isArrayish(subject)) {\n    // Treat array-ish objects as a byte array\n    if (Buffer.isBuffer(subject)) {\n      for (i = 0; i < length; i++)\n        buf[i] = subject.readUInt8(i)\n    } else {\n      for (i = 0; i < length; i++)\n        buf[i] = ((subject[i] % 256) + 256) % 256\n    }\n  } else if (type === 'string') {\n    buf.write(subject, 0, encoding)\n  } else if (type === 'number' && !Buffer.TYPED_ARRAY_SUPPORT && !noZero) {\n    for (i = 0; i < length; i++) {\n      buf[i] = 0\n    }\n  }\n\n  if (length > 0 && length <= Buffer.poolSize)\n    buf.parent = rootParent\n\n  return buf\n}\n\nfunction SlowBuffer(subject, encoding, noZero) {\n  if (!(this instanceof SlowBuffer))\n    return new SlowBuffer(subject, encoding, noZero)\n\n  var buf = new Buffer(subject, encoding, noZero)\n  delete buf.parent\n  return buf\n}\n\nBuffer.isBuffer = function (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b))\n    throw new TypeError('Arguments must be Buffers')\n\n  var x = a.length\n  var y = b.length\n  for (var i = 0, len = Math.min(x, y); i < len && a[i] === b[i]; i++) {}\n  if (i !== len) {\n    x = a[i]\n    y = b[i]\n  }\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function (list, totalLength) {\n  if (!isArray(list)) throw new TypeError('Usage: Buffer.concat(list[, length])')\n\n  if (list.length === 0) {\n    return new Buffer(0)\n  } else if (list.length === 1) {\n    return list[0]\n  }\n\n  var i\n  if (totalLength === undefined) {\n    totalLength = 0\n    for (i = 0; i < list.length; i++) {\n      totalLength += list[i].length\n    }\n  }\n\n  var buf = new Buffer(totalLength)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var item = list[i]\n    item.copy(buf, pos)\n    pos += item.length\n  }\n  return buf\n}\n\nBuffer.byteLength = function (str, encoding) {\n  var ret\n  str = str + ''\n  switch (encoding || 'utf8') {\n    case 'ascii':\n    case 'binary':\n    case 'raw':\n      ret = str.length\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = str.length * 2\n      break\n    case 'hex':\n      ret = str.length >>> 1\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = utf8ToBytes(str).length\n      break\n    case 'base64':\n      ret = base64ToBytes(str).length\n      break\n    default:\n      ret = str.length\n  }\n  return ret\n}\n\n// pre-set for values that may exist in the future\nBuffer.prototype.length = undefined\nBuffer.prototype.parent = undefined\n\n// toString(encoding, start=0, end=buffer.length)\nBuffer.prototype.toString = function (encoding, start, end) {\n  var loweredCase = false\n\n  start = start >>> 0\n  end = end === undefined || end === Infinity ? this.length : end >>> 0\n\n  if (!encoding) encoding = 'utf8'\n  if (start < 0) start = 0\n  if (end > this.length) end = this.length\n  if (end <= start) return ''\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase)\n          throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.equals = function (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max)\n      str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  return Buffer.compare(this, b)\n}\n\n// `get` will be removed in Node 0.13+\nBuffer.prototype.get = function (offset) {\n  console.log('.get() is deprecated. Access using array indexes instead.')\n  return this.readUInt8(offset)\n}\n\n// `set` will be removed in Node 0.13+\nBuffer.prototype.set = function (v, offset) {\n  console.log('.set() is deprecated. Access using array indexes instead.')\n  return this.writeUInt8(v, offset)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var byte = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(byte)) throw new Error('Invalid hex string')\n    buf[offset + i] = byte\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  var charsWritten = blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n  return charsWritten\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  var charsWritten = blitBuffer(asciiToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  var charsWritten = blitBuffer(base64ToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction utf16leWrite (buf, string, offset, length) {\n  var charsWritten = blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length, 2)\n  return charsWritten\n}\n\nBuffer.prototype.write = function (string, offset, length, encoding) {\n  // Support both (string, offset, length, encoding)\n  // and the legacy (string, encoding, offset, length)\n  if (isFinite(offset)) {\n    if (!isFinite(length)) {\n      encoding = length\n      length = undefined\n    }\n  } else {  // legacy\n    var swap = encoding\n    encoding = offset\n    offset = length\n    length = swap\n  }\n\n  offset = Number(offset) || 0\n\n  if (length < 0 || offset < 0 || offset > this.length)\n    throw new RangeError('attempt to write outside buffer bounds');\n\n  var remaining = this.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n  encoding = String(encoding || 'utf8').toLowerCase()\n\n  var ret\n  switch (encoding) {\n    case 'hex':\n      ret = hexWrite(this, string, offset, length)\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = utf8Write(this, string, offset, length)\n      break\n    case 'ascii':\n      ret = asciiWrite(this, string, offset, length)\n      break\n    case 'binary':\n      ret = binaryWrite(this, string, offset, length)\n      break\n    case 'base64':\n      ret = base64Write(this, string, offset, length)\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = utf16leWrite(this, string, offset, length)\n      break\n    default:\n      throw new TypeError('Unknown encoding: ' + encoding)\n  }\n  return ret\n}\n\nBuffer.prototype.toJSON = function () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  var res = ''\n  var tmp = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    if (buf[i] <= 0x7F) {\n      res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i])\n      tmp = ''\n    } else {\n      tmp += '%' + buf[i].toString(16)\n    }\n  }\n\n  return res + decodeUtf8Char(tmp)\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len;\n    if (start < 0)\n      start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0)\n      end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start)\n    end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = Buffer._augment(this.subarray(start, end))\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined, true)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  if (newBuf.length)\n    newBuf.parent = this.parent || this\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0)\n    throw new RangeError('offset is not uint')\n  if (offset + ext > length)\n    throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert)\n    checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100))\n    val += this[offset + i] * mul\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert)\n    checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100))\n    val += this[offset + --byteLength] * mul;\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n      ((this[offset + 1] << 16) |\n      (this[offset + 2] << 8) |\n      this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert)\n    checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100))\n    val += this[offset + i] * mul\n  mul *= 0x80\n\n  if (val >= mul)\n    val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert)\n    checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100))\n    val += this[offset + --i] * mul\n  mul *= 0x80\n\n  if (val >= mul)\n    val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80))\n    return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16) |\n      (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n      (this[offset + 1] << 16) |\n      (this[offset + 2] << 8) |\n      (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100))\n    this[offset + i] = (value / mul) >>> 0 & 0xFF\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100))\n    this[offset + i] = (value / mul) >>> 0 & 0xFF\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = value\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n  } else objectWriteUInt16(this, value, offset, true)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = value\n  } else objectWriteUInt16(this, value, offset, false)\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = value\n  } else objectWriteUInt32(this, value, offset, true)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = value\n  } else objectWriteUInt32(this, value, offset, false)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkInt(this,\n             value,\n             offset,\n             byteLength,\n             Math.pow(2, 8 * byteLength - 1) - 1,\n             -Math.pow(2, 8 * byteLength - 1))\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100))\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkInt(this,\n             value,\n             offset,\n             byteLength,\n             Math.pow(2, 8 * byteLength - 1) - 1,\n             -Math.pow(2, 8 * byteLength - 1))\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100))\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = value\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n  } else objectWriteUInt16(this, value, offset, true)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = value\n  } else objectWriteUInt16(this, value, offset, false)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else objectWriteUInt32(this, value, offset, true)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = value\n  } else objectWriteUInt32(this, value, offset, false)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n  if (offset < 0) throw new RangeError('index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert)\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert)\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function (target, target_start, start, end) {\n  var source = this\n\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (target_start >= target.length) target_start = target.length\n  if (!target_start) target_start = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || source.length === 0) return 0\n\n  // Fatal error conditions\n  if (target_start < 0)\n    throw new RangeError('targetStart out of bounds')\n  if (start < 0 || start >= source.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length)\n    end = this.length\n  if (target.length - target_start < end - start)\n    end = target.length - target_start + start\n\n  var len = end - start\n\n  if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < len; i++) {\n      target[i + target_start] = this[i + start]\n    }\n  } else {\n    target._set(this.subarray(start, start + len), target_start)\n  }\n\n  return len\n}\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function (value, start, end) {\n  if (!value) value = 0\n  if (!start) start = 0\n  if (!end) end = this.length\n\n  if (end < start) throw new RangeError('end < start')\n\n  // Fill 0 bytes; we're done\n  if (end === start) return\n  if (this.length === 0) return\n\n  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')\n  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')\n\n  var i\n  if (typeof value === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = value\n    }\n  } else {\n    var bytes = utf8ToBytes(value.toString())\n    var len = bytes.length\n    for (i = start; i < end; i++) {\n      this[i] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n/**\n * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n */\nBuffer.prototype.toArrayBuffer = function () {\n  if (typeof Uint8Array !== 'undefined') {\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      return (new Buffer(this)).buffer\n    } else {\n      var buf = new Uint8Array(this.length)\n      for (var i = 0, len = buf.length; i < len; i += 1) {\n        buf[i] = this[i]\n      }\n      return buf.buffer\n    }\n  } else {\n    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')\n  }\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar BP = Buffer.prototype\n\n/**\n * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n */\nBuffer._augment = function (arr) {\n  arr.constructor = Buffer\n  arr._isBuffer = true\n\n  // save reference to original Uint8Array get/set methods before overwriting\n  arr._get = arr.get\n  arr._set = arr.set\n\n  // deprecated, will be removed in node 0.13+\n  arr.get = BP.get\n  arr.set = BP.set\n\n  arr.write = BP.write\n  arr.toString = BP.toString\n  arr.toLocaleString = BP.toString\n  arr.toJSON = BP.toJSON\n  arr.equals = BP.equals\n  arr.compare = BP.compare\n  arr.copy = BP.copy\n  arr.slice = BP.slice\n  arr.readUIntLE = BP.readUIntLE\n  arr.readUIntBE = BP.readUIntBE\n  arr.readUInt8 = BP.readUInt8\n  arr.readUInt16LE = BP.readUInt16LE\n  arr.readUInt16BE = BP.readUInt16BE\n  arr.readUInt32LE = BP.readUInt32LE\n  arr.readUInt32BE = BP.readUInt32BE\n  arr.readIntLE = BP.readIntLE\n  arr.readIntBE = BP.readIntBE\n  arr.readInt8 = BP.readInt8\n  arr.readInt16LE = BP.readInt16LE\n  arr.readInt16BE = BP.readInt16BE\n  arr.readInt32LE = BP.readInt32LE\n  arr.readInt32BE = BP.readInt32BE\n  arr.readFloatLE = BP.readFloatLE\n  arr.readFloatBE = BP.readFloatBE\n  arr.readDoubleLE = BP.readDoubleLE\n  arr.readDoubleBE = BP.readDoubleBE\n  arr.writeUInt8 = BP.writeUInt8\n  arr.writeUIntLE = BP.writeUIntLE\n  arr.writeUIntBE = BP.writeUIntBE\n  arr.writeUInt16LE = BP.writeUInt16LE\n  arr.writeUInt16BE = BP.writeUInt16BE\n  arr.writeUInt32LE = BP.writeUInt32LE\n  arr.writeUInt32BE = BP.writeUInt32BE\n  arr.writeIntLE = BP.writeIntLE\n  arr.writeIntBE = BP.writeIntBE\n  arr.writeInt8 = BP.writeInt8\n  arr.writeInt16LE = BP.writeInt16LE\n  arr.writeInt16BE = BP.writeInt16BE\n  arr.writeInt32LE = BP.writeInt32LE\n  arr.writeInt32BE = BP.writeInt32BE\n  arr.writeFloatLE = BP.writeFloatLE\n  arr.writeFloatBE = BP.writeFloatBE\n  arr.writeDoubleLE = BP.writeDoubleLE\n  arr.writeDoubleBE = BP.writeDoubleBE\n  arr.fill = BP.fill\n  arr.inspect = BP.inspect\n  arr.toArrayBuffer = BP.toArrayBuffer\n\n  return arr\n}\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-z\\-]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction isArrayish (subject) {\n  return isArray(subject) || Buffer.isBuffer(subject) ||\n      subject && typeof subject === 'object' &&\n      typeof subject.length === 'number'\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes(string, units) {\n  var codePoint, length = string.length\n  var leadSurrogate = null\n  units = units || Infinity\n  var bytes = []\n  var i = 0\n\n  for (; i<length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n\n      // last char was a lead\n      if (leadSurrogate) {\n\n        // 2 leads in a row\n        if (codePoint < 0xDC00) {\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          leadSurrogate = codePoint\n          continue\n        }\n\n        // valid surrogate pair\n        else {\n          codePoint = leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00 | 0x10000\n          leadSurrogate = null\n        }\n      }\n\n      // no lead yet\n      else {\n\n        // unexpected trail\n        if (codePoint > 0xDBFF) {\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // unpaired lead\n        else if (i + 1 === length) {\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        else {\n          leadSurrogate = codePoint\n          continue\n        }\n      }\n    }\n\n    // valid bmp char, but last char was a lead\n    else if (leadSurrogate) {\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n      leadSurrogate = null\n    }\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    }\n    else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      );\n    }\n    else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    }\n    else if (codePoint < 0x200000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    }\n    else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length, unitSize) {\n  if (unitSize) length -= length % unitSize;\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length))\n      break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction decodeUtf8Char (str) {\n  try {\n    return decodeURIComponent(str)\n  } catch (err) {\n    return String.fromCharCode(0xFFFD) // UTF 8 invalid char\n  }\n}\n","/*jslint browser: true, devel: true, node: true, ass: true, nomen: true, unparam: true, indent: 4 */\r\n\r\n(function (window) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Returns required or a browser's global\r\n     *\r\n     * @param {Function | Object} required\r\n     * @param {string} browserName\r\n     * @returns {*}\r\n     */\r\n    module.exports = function (required, browserName) {\r\n        if (required && (typeof required !== 'object' || Object.keys(required).length)) { return required; }\r\n        if (window && typeof browserName === 'string') { return window[browserName]; }\r\n    };\r\n\r\n}(typeof window !== 'undefined' ? window : null));","\n/**\n * isArray\n */\n\nvar isArray = Array.isArray;\n\n/**\n * toString\n */\n\nvar str = Object.prototype.toString;\n\n/**\n * Whether or not the given `val`\n * is an array.\n *\n * example:\n *\n *        isArray([]);\n *        // > true\n *        isArray(arguments);\n *        // > false\n *        isArray('');\n *        // > false\n *\n * @param {mixed} val\n * @return {bool}\n */\n\nmodule.exports = isArray || function (val) {\n  return !! val && '[object Array]' == str.call(val);\n};\n","exports.read = function(buffer, offset, isLE, mLen, nBytes) {\n  var e, m,\n      eLen = nBytes * 8 - mLen - 1,\n      eMax = (1 << eLen) - 1,\n      eBias = eMax >> 1,\n      nBits = -7,\n      i = isLE ? (nBytes - 1) : 0,\n      d = isLE ? -1 : 1,\n      s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity);\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function(buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c,\n      eLen = nBytes * 8 - mLen - 1,\n      eMax = (1 << eLen) - 1,\n      eBias = eMax >> 1,\n      rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0),\n      i = isLE ? 0 : (nBytes - 1),\n      d = isLE ? 1 : -1,\n      s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);\n\n  buffer[offset + i - d] |= s * 128;\n};\n","var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n;(function (exports) {\n\t'use strict';\n\n  var Arr = (typeof Uint8Array !== 'undefined')\n    ? Uint8Array\n    : Array\n\n\tvar PLUS   = '+'.charCodeAt(0)\n\tvar SLASH  = '/'.charCodeAt(0)\n\tvar NUMBER = '0'.charCodeAt(0)\n\tvar LOWER  = 'a'.charCodeAt(0)\n\tvar UPPER  = 'A'.charCodeAt(0)\n\tvar PLUS_URL_SAFE = '-'.charCodeAt(0)\n\tvar SLASH_URL_SAFE = '_'.charCodeAt(0)\n\n\tfunction decode (elt) {\n\t\tvar code = elt.charCodeAt(0)\n\t\tif (code === PLUS ||\n\t\t    code === PLUS_URL_SAFE)\n\t\t\treturn 62 // '+'\n\t\tif (code === SLASH ||\n\t\t    code === SLASH_URL_SAFE)\n\t\t\treturn 63 // '/'\n\t\tif (code < NUMBER)\n\t\t\treturn -1 //no match\n\t\tif (code < NUMBER + 10)\n\t\t\treturn code - NUMBER + 26 + 26\n\t\tif (code < UPPER + 26)\n\t\t\treturn code - UPPER\n\t\tif (code < LOWER + 26)\n\t\t\treturn code - LOWER + 26\n\t}\n\n\tfunction b64ToByteArray (b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tvar len = b64.length\n\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\tvar L = 0\n\n\t\tfunction push (v) {\n\t\t\tarr[L++] = v\n\t\t}\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\tpush(tmp & 0xFF)\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\treturn arr\n\t}\n\n\tfunction uint8ToBase64 (uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length\n\n\t\tfunction encode (num) {\n\t\t\treturn lookup.charAt(num)\n\t\t}\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t}\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\toutput += tripletToBase64(temp)\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\toutput += '=='\n\t\t\t\tbreak\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\toutput += '='\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn output\n\t}\n\n\texports.toByteArray = b64ToByteArray\n\texports.fromByteArray = uint8ToBase64\n}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))\n"]}
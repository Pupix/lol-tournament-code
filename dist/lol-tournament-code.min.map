{"version":3,"sources":["../../AppData/Roaming/npm/node_modules/browserify/node_modules/browser-pack/_prelude.js","index","lib/index.js","../../AppData/Roaming/npm/node_modules/browserify/node_modules/buffer/index.js","../../AppData/Roaming/npm/node_modules/browserify/node_modules/isarray/index.js","../../AppData/Roaming/npm/node_modules/browserify/node_modules/base64-js/lib/b64.js","../../AppData/Roaming/npm/node_modules/browserify/node_modules/ieee754/index.js"],"names":["global","generate","opt","code","encoded","XP","assertArgument","isObject","assert","name","RequiredError","map","includes","maps","toNumber","type","types","size","sizes","spectators","extra","JSON","stringify","password","report","Buffer","toString","require","isBrowser","LoL","tournamentCode","module","exports","window","typedArraySupport","arr","Uint8Array","foo","subarray","byteLength","e","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","length","RangeError","__proto__","prototype","arg","encodingOrOffset","this","Error","allocUnsafe","from","value","TypeError","ArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","alloc","fill","encoding","undefined","checked","i","string","isEncoding","write","fromArrayLike","array","byteOffset","obj","isBuffer","len","copy","buffer","isnan","isArray","data","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","binarySlice","base64Slice","utf16leSlice","swap","b","n","m","arrayIndexOf","val","read","buf","indexSize","readUInt16BE","arrLength","valLength","String","foundIndex","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","isNaN","utf8Write","blitBuffer","asciiWrite","asciiToBytes","binaryWrite","base64Write","ucs2Write","utf16leToBytes","base64","fromByteArray","slice","Math","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","push","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","ret","out","toHex","bytes","checkOffset","ext","checkInt","max","objectWriteUInt16","littleEndian","j","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","str","stringtrim","replace","INVALID_BASE64_RE","trim","units","Infinity","leadSurrogate","charCodeAt","byteArray","c","hi","lo","toByteArray","src","dst","INSPECT_MAX_BYTES","poolSize","_augment","Symbol","species","Object","defineProperty","configurable","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","arguments","equals","inspect","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","indexOf","call","isFinite","toJSON","Array","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","init","lookup","revLookup","b64","l","tmp","placeHolders","Arr","L","tripletToBase64","num","encodeChunk","uint8","output","extraBytes","parts","maxChunkLength","len2","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","abs","log","LN2"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports=require(\"./lib\");","/*jslint browser: true, devel: true, node: true, ass: true, nomen: true, unparam: true, indent: 4 */\n\n(function (global) {\n    \"use strict\";\n\n    var XP = global.XP || require('expandjs'),\n\n        /**\n         * The list of available map IDs\n         *\n         * 1: Summoner's Rift (Summer)\n         * 2: Summoner's Rift (Autumn)\n         * 3: Proving Grounds\n         * 4: Twisted Treeline\n         * 8: Crystal Scar\n         * 10: Twisted Treeline (New)\n         * 11: Summoner's Rift(New)\n         * 12: Howling Abyss\n         *\n         * @type {number[]}\n         * @private\n         */\n        maps = [1, 2, 3, 4, 8, 10, 11, 12],\n\n        /**\n         * The list of available game types\n         *\n         * 1: Blind Pick\n         * 2: Draft Mode\n         * 4: All Random\n         * 6: Tournament Draft\n         *\n         * @type {number[]}\n         * @private\n         */\n        types = [1, 2, 4, 6],\n\n        /**\n         * Number of possible players in each team\n         *\n         * @type {number[]}\n         * @private\n         */\n        sizes = [1, 2, 3, 4, 5],\n\n        /**\n         * List of possible spectator restriction\n         *\n         * ALL: Everybody can spectate the game\n         * NONE: Nobody can spectate the game\n         * FRIENDS: Only friends of the players can spectate the game\n         * DROPINONLY: Only people present in the lobby can spectate the game\n         *\n         * @type {string[]}\n         * @private\n         */\n        spectators = ['ALL', 'NONE', 'NONE', 'FRIENDS', 'DROPINONLY'];\n\n    /**\n     * Creates a tournament code\n     *\n     * @method generate\n     * @param {Object} opt\n     *  @param {String} opt.name - The name of the lobby\n     *  @param {String} [opt.password = ''] - The password of the lobby\n     *  @param {Number} [opt.map = 11] - The ID of the map to be played\n     *  @param {Number} [opt.type = 6] - The game type of the game to be played\n     *  @param {Number} [opt.size = 5] - The size of the teams\n     *  @param {String} [opt.spectators = 'DROPINONLY] - Which persons can spectate the game\n     *  @param {String} [opt.report] - URL where to receive a report info after the game is over\n     *  @param {String} [opt.extra = ''] - Any extra details to be sent to the reportURL\n     * @returns string\n     * @throws\n     */\n\n    function generate(opt) {\n        var code,\n            encoded;\n\n        //Checking\n        XP.assertArgument(XP.isObject(opt), 1, 'Object');\n        XP.assert(opt.name, function () { throw new XP.RequiredError('name'); });\n\n        //Assigning\n        opt.map        = XP.includes(maps, XP.toNumber(opt.map)) ? opt.map : 11;\n        opt.type       = XP.includes(types, XP.toNumber(opt.type)) ? opt.type : 6;\n        opt.size       = XP.includes(sizes, XP.toNumber(opt.size)) ? opt.size : 5;\n        opt.spectators = XP.includes(spectators, opt.spectators) ? opt.spectators : 'DROPINONLY';\n        opt.extra      = opt.extra || '';\n\n        //Encoding\n        encoded =  JSON.stringify({\n            name: opt.name,\n            extra: opt.extra,\n            password: opt.password,\n            report: opt.report\n        });\n        encoded = new Buffer(encoded).toString('base64');\n\n        //Creating\n        code = 'pvpnet://lol/customgame/joinorcreate/map' + opt.map +\n                '/pick' + opt.type +\n                '/team' + opt.size +\n                '/spec' + opt.spectators +\n                '/' + encoded;\n\n        return code;\n    }\n\n    if (XP.isBrowser()) {\n        global.LoL = global.LoL || {};\n        global.LoL.tournamentCode = generate;\n    } else {\n        module.exports = generate;\n    }\n\n}(typeof window !== \"undefined\" ? window : global));\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.foo = function () { return 42 }\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; i++) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  that.write(string, encoding)\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; i++) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'binary':\n      // Deprecated\n      case 'raw':\n      case 'raws':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var foundIndex = -1\n  for (var i = 0; byteOffset + i < arrLength; i++) {\n    if (read(arr, byteOffset + i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n      if (foundIndex === -1) foundIndex = i\n      if (i - foundIndex + 1 === valLength) return (byteOffset + foundIndex) * indexSize\n    } else {\n      if (foundIndex !== -1) i -= i - foundIndex\n      foundIndex = -1\n    }\n  }\n  return -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset >>= 0\n\n  if (this.length === 0) return -1\n  if (byteOffset >= this.length) return -1\n\n  // Negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  if (Buffer.isBuffer(val)) {\n    // special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(this, val, byteOffset, encoding)\n  }\n  if (typeof val === 'number') {\n    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n    }\n    return arrayIndexOf(this, [ val ], byteOffset, encoding)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'binary':\n        return binaryWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; i--) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; i++) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; i++) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","'use strict'\n\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nfunction init () {\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i]\n    revLookup[code.charCodeAt(i)] = i\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62\n  revLookup['_'.charCodeAt(0)] = 63\n}\n\ninit()\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n"]}